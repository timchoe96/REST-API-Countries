{"ast":null,"code":"var _jsxFileName = \"/Users/timothychoe/Desktop/REST-Countries-API-with-color-theme-switcher/src/Flags.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Flag from './Flag';\n\nconst Flags = () => {\n  const countries = useSelector(state => state.fetchCountries.countries);\n  const region = useSelector(state => state.filter);\n  const search = useSelector(state => state.searchResult);\n\n  const filteredCountries = () => {\n    if (region !== 'All' && region !== 'Filter by Region') {\n      return countries.filter(country => {\n        return country.region.toLowerCase().includes(region.toLowerCase());\n      });\n    } else {\n      return countries;\n    }\n  };\n\n  const searchFiltered = () => {\n    return filteredCountries().filter(country => {\n      return country.name.toLowerCase().includes(search.toLowerCase());\n    });\n  };\n\n  if (searchFiltered().length !== 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Flags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, searchFiltered().map((country, i) => {\n      return /*#__PURE__*/React.createElement(Flag, {\n        key: i,\n        name: country.name,\n        flag: country.flag,\n        population: country.population,\n        region: country.region,\n        capital: country.capital,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 23\n        }\n      });\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noFlags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }\n    }, \"Sorry, cannot find your search.\"));\n  }\n};\n\nexport default Flags;","map":{"version":3,"sources":["/Users/timothychoe/Desktop/REST-Countries-API-with-color-theme-switcher/src/Flags.js"],"names":["React","useSelector","Flag","Flags","countries","state","fetchCountries","region","filter","search","searchResult","filteredCountries","country","toLowerCase","includes","searchFiltered","name","length","map","i","flag","population","capital"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,SAAS,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,SAA/B,CAA7B;AACA,QAAMG,MAAM,GAAGN,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACG,MAAhB,CAA1B;AACA,QAAMC,MAAM,GAAGR,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACK,YAAhB,CAA1B;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAChC,QAAGJ,MAAM,KAAK,KAAX,IAAmBA,MAAM,KAAK,kBAAjC,EAAoD;AACpD,aAAOH,SAAS,CAACI,MAAV,CAAiBI,OAAO,IAAE;AAC9B,eAAOA,OAAO,CAACL,MAAR,CAAeM,WAAf,GAA6BC,QAA7B,CAAsCP,MAAM,CAACM,WAAP,EAAtC,CAAP;AACF,OAFM,CAAP;AAGC,KAJD,MAIO;AACH,aAAOT,SAAP;AACH;AACA,GARD;;AAUA,QAAMW,cAAc,GAAG,MAAM;AACzB,WAAOJ,iBAAiB,GAAGH,MAApB,CAA2BI,OAAO,IAAI;AACzC,aAAOA,OAAO,CAACI,IAAR,CAAaH,WAAb,GAA2BC,QAA3B,CAAoCL,MAAM,CAACI,WAAP,EAApC,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAOA,MAAGE,cAAc,GAAGE,MAAjB,KAA4B,CAA/B,EAAiC;AACjC,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,cAAc,GAAGG,GAAjB,CAAqB,CAACN,OAAD,EAASO,CAAT,KAAe;AACnC,0BAAQ,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAX;AAAc,QAAA,IAAI,EAAEP,OAAO,CAACI,IAA5B;AAAkC,QAAA,IAAI,EAAEJ,OAAO,CAACQ,IAAhD;AAAsD,QAAA,UAAU,EAAER,OAAO,CAACS,UAA1E;AAAsF,QAAA,MAAM,EAAET,OAAO,CAACL,MAAtG;AAA8G,QAAA,OAAO,EAAEK,OAAO,CAACU,OAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD,KAFA,CADL,CADJ;AAME,GAPF,MAOM;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAzB,CADJ;AAGC;AACJ,CAlCD;;AAoCA,eAAenB,KAAf","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport Flag from './Flag';\n\nconst Flags = () => {\n    const countries = useSelector(state => state.fetchCountries.countries);\n    const region = useSelector(state => state.filter);\n    const search = useSelector(state => state.searchResult)\n    \n    const filteredCountries = () => {\n    if(region !== 'All'&& region !== 'Filter by Region'){\n    return countries.filter(country=>{\n       return country.region.toLowerCase().includes(region.toLowerCase())\n    })\n    }  else{\n        return countries\n    }\n    }\n\n    const searchFiltered = () => {\n        return filteredCountries().filter(country => {\n            return country.name.toLowerCase().includes(search.toLowerCase())\n        }) \n    }\n\n\n    if(searchFiltered().length !== 0){\n    return(\n        <div className='Flags'>\n            {searchFiltered().map((country,i) => {\n              return  <Flag key={i} name={country.name} flag={country.flag} population={country.population} region={country.region} capital={country.capital}/>\n            })}\n        </div>\n    )}else{\n    return (\n        <div className='noFlags'><h1>Sorry, cannot find your search.</h1></div>\n    )\n    }\n}\n\nexport default Flags;"]},"metadata":{},"sourceType":"module"}