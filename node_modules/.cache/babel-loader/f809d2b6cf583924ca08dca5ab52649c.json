{"ast":null,"code":"var _jsxFileName = \"/Users/timothychoe/Desktop/REST-Countries-API-with-color-theme-switcher/src/App.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { requestCountries } from './actions/index.js';\n\nconst App = () => {\n  const countries = useSelector(state => state.fetchCountries.countries);\n  const dispatch = useDispatch();\n\n  if (countries.length === 0) {\n    dispatch(requestCountries());\n  }\n\n  let allCountries = [];\n\n  const test = () => {\n    countries.map(array => {\n      return array.push(...array);\n    });\n  };\n\n  console.log(allCountries);\n  console.log(countries);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/timothychoe/Desktop/REST-Countries-API-with-color-theme-switcher/src/App.js"],"names":["React","useSelector","useDispatch","requestCountries","App","countries","state","fetchCountries","dispatch","length","allCountries","test","map","array","push","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAElB,QAAMC,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,SAA/B,CAA7B;AACA,QAAMG,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,MAAIG,SAAS,CAACI,MAAV,KAAqB,CAAzB,EAA2B;AACvBD,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACH;;AAED,MAAIO,YAAY,GAAE,EAAlB;;AAEA,QAAMC,IAAI,GAAG,MAAK;AAACN,IAAAA,SAAS,CAACO,GAAV,CAAcC,KAAK,IAAI;AACvC,aAAOA,KAAK,CAACC,IAAN,CAAW,GAAGD,KAAd,CAAP;AACF,KAFkB;AAEhB,GAFH;;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACI,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAOH,CAzBD;;AA2BA,eAAeD,GAAf","sourcesContent":["import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {requestCountries} from './actions/index.js';\n\n\n\nconst App = () => {\n\nconst countries = useSelector(state => state.fetchCountries.countries)\nconst dispatch = useDispatch();\n\nif (countries.length === 0){\n    dispatch(requestCountries())\n}\n\nlet allCountries= [];\n\nconst test = () =>{countries.map(array => {\n   return array.push(...array)\n})}\n\nconsole.log(allCountries);\n\nconsole.log(countries)\n    return(\n\n        <div> \n           \n        </div>\n    )\n    \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}